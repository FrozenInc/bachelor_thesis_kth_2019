make it so that the leader optimizes first and then sends the optimized trajectory to the follower, who will optimize over just the current leader trajectory


what to do:
- optimize the dynamics, from elis kod and whiteboard
- zero friction
- try with other speed for the cars and/or different starting locations, maybe get a better results?
- find why the red car doesnt respond faster to the obstacle
- add the trajectory that the cars are planning in the simulation (this is possibly done in def animation_loop(), check in the __init__ how they do the cars, and make something similar with a new picture, you should be able to get the trajectories by self.cars[i].traj)
